/*
 * Copyright (c) Kuba SzczodrzyÅ„ski 2022-12-14.
 */

package io.github.cloudcutter.work.exploit.action

import io.github.cloudcutter.R
import io.github.cloudcutter.util.Text
import io.github.cloudcutter.work.exceptions.CloudcutterException
import io.github.cloudcutter.work.exceptions.CloudcutterTextException
import kotlinx.coroutines.TimeoutCancellationException

abstract class Action(
	val id: String,
	val title: Text?,
	val nextId: String? = null,
	val timeout: Long? = null,
) {

	open fun getCloudcutterException(e: Exception): CloudcutterException? = when (e) {
		is TimeoutCancellationException -> CloudcutterTextException(Text(R.string.message_error_timeout))
		else -> CloudcutterTextException(Text(R.string.message_error_unknown, e.toString()))
	}

	override fun toString(): String {
		return "${this::class.java.simpleName}(${id})"
	}
}
